@startuml
class Car {
    - _gear: int
    - _speed: int
    - _dice: IDice

    + Car(): Car
    + Car(dice: IDice): Car

    + Speed: int { get; }
    + Gear: int { get; set; }

    + Accelerate(): void
}

class DefaultDice {
    - _random: Random

    + Dots: int { get; private set; }

    + Roll(): void
}

class FakeDice {
    + Dots: int { get; set; }

    + Roll(): void
}

interface IDice {
    + Dots: int { get; }

    + Roll(): void
}

class Section {
    + MaxSpeed: int { get; set; }
    + Length: int { get; set; }
    + NextSection: Section? { get; private set; }
    + PreviousSection: Section? { get; private set; }

    + Section(speed: int, length: int): Section

    + AddAfterMe(section: Section): void
    + AddBeforeMe(section: Section): void
}

class Track {
    - _startSection: Section

    + StartSection: Section {get; private set;}
    + Length: int {get;}
    + this[index: int]: Section {get;}
    + MaxSpeedOfTrack: int {get;}
    + MinSpeedOfTrack: int {get;}
    + LongestSection: int {get;}
    + TrackLenght: int {get;}

    + Track(startSection: Section)
    + GetEnumerator(): IEnumerator<Section>
    + UpdateStartSection(): Section

    <<interface>> IEnumerable<Section>
}

class TrackBuilder {
    - StartSection: Section

    + StartSection: Section {get; private set;}
    + Length: int {get;}
    + this[index: int]: Section {get; set;}

    + TrackBuilder(sectionsData: (int, int)[])
    + Build(): Section
    + Add(newSection: Section): void
    + RemoveSection(index: int): void
}

FakeDice ..|> IDice
DefaultDice ..|> IDice
Car ..> IDice : uses
Track "1" o-- "*" Section
Track ..> IReadOnlyList : uses
TrackBuilder ..> Track : builds
@enduml
